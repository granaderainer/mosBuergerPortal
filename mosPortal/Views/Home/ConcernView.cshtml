@model Concern
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "ConcernView";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["ConcernId"] = Model.Id;
}

<!-- Page Content -->
<div class="container">
    <!-- Page Heading/Breadcrumbs -->
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                Anliegen
            </h1>
            <ol class="breadcrumb">
                <li>
                    <ul class="breadcrumb d-flex justify-content-end">
                        <li class="breadcrumb-item">
                            <a href="index.html">Home</a>
                        </li>
                        <!--Richtigen Link einfügen-->
                        <li class="breadcrumb-item">
                            <a href="#">Alle Anliegen</a>
                        </li>
                        <li class="breadcrumb-item active">Anliegen</li>
                    </ul>
                </li>
            </ol>
        </div>
    </div>
    <!-- /.row -->
    <div class="row">
        <!-- Blog Sidebar Widgets Column NEW -->
        <div class="col-md-3">
            <!-- PAGES MENU -->
            <div class="panel panel-default sidebar-menu">
                <!-- "Neues Anliegen" Button Sidebar-->
                @if (SignInManager.IsSignedIn(User))
                {
                    <div class="well">
                        @*<span class="input-group-btn">
                                <a class="btn btn-primary" id="createNewConcern" asp-action="CreateConcern" asp-controller="Home">Neues Anliegen <i class="fa fa-plus-square"></i></a>
                            </span>*@
                        <span class="input-group-btn">
                            <a class="btn btn-primary" id="createNewConcern" data-toggle="modal" data-target="#createConcernModal"><i class="fa fa-plus-square"></i> Neues Anliegen</a>
                        </span>
                        @*<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createConcernModal">Neues Anliegen JSon</button>*@
                    </div>
                }
                <hr>
                <!-- Blog Search Well -->
                <div class="well">
                    <h4>Nach Anliegen suchen:</h4>
                    <div class="input-group">
                        <input type="text" class="form-control">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button">
                                <i class="fa fa-search"></i>
                            </button>
                        </span>
                    </div>
                    <!-- /.input-group -->
                </div>
                <hr>
                <!-- Blog Categories Well -->
                <div class="panel-body">
                    <h4>Alle Kategorien</h4>
                    <ul class="nav nav-pills flex-column text-sm">
                        <li class="nav-item">
                            <a href="text.html" class="nav-link">Straßen</a>
                        </li>
                        <li class="nav-item">
                            <a href="contact.html" class="nav-link">Öffentliche Einrichtungen</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- Blog Entries Column -->
        <!-- Blog Post Content Column -->
        <div class="col-lg-9">
            <!-- Blog Post -->
            <h3>@Model.Title</h3>
            <hr>
            <!-- Date/Time -->
            <p class="read-more text-right"><i class="fa fa-clock-o"></i> Erstellt am @Model.Date.ToString("dd/MM/yyyy")</p>
            <p></p>
            <!-- Preview Image -->
            <!--<img class="img-responsive" src='@Url.Action( "show", "image", new { id = ViewData["imageID"] })' />-->
            <img class="img-responsive" id="ItemPreview" src="" />
            <br />
            <!-- Post Content -->
            <p>@Model.Text</p>
            <p class="read-more text-right">
                <a>
                    @if (Model.UserConcern.Count() == 1)
                    {
                        <span id="likesConcern @Model.Id">@Model.UserConcern.Count() Like</span>
                    }
                    else
                    {
                        <span id="likesConcern @Model.Id">@Model.UserConcern.Count() Likes</span>
                    }
                </a>
                @if (SignInManager.IsSignedIn(User) && Model.allowToVote(await SignInManager.UserManager.GetUserAsync(Context.User)))
                {
                    <a class="btn btn-primary" href="#" id="likeConcern @Model.Id" onclick="disableButton(this, @Model.Id)">Like <i class="fa fa-thumbs-up"></i></a>
                }
                else
                {
                    <a class="btn btn-primary" href="#" id="likeConcern @Model.Id" disabled>Like <i class="fa fa-thumbs-up"></i></a>
                }
            </p>
            <hr>
            <!-- Blog Comments -->
            <!-- Comments Form -->
            <div class="well">
                <h4>Jetzt kommentieren:</h4>
                <form role="form" method="post" asp-route-concernId="@Model.Id" asp-action="PostCommentAsync" asp-controller="Home">
                    <div class="form-group">
                        <textarea class="form-control" rows="3" name="commentText" id="commentText"></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Posten</button>
                </form>
            </div>
            <hr>
            <!-- Posted Comments -->
            @foreach (var comment in Model.Comment)
            {
                <!-- Comment -->
                <div class="media">
                    <div class="media-body">
                        <h4 class="media-heading">
                            Von Einwohner @comment.UserId
                            <small>Erstellt am @comment.Date</small>
                        </h4>
                        @comment.Text
                    </div>

                </div><br/>
            }
            <br/>
        </div>
    </div>


</div>

@await Html.PartialAsync("CreateConcernModalView", new Concern(), new ViewDataDictionary(ViewData))

<script type="text/javascript">
    function disableButton(btn, concernId) {
        if (!document.getElementById(btn.id).disabled) {
            document.getElementById(btn.id).disabled = true;
            document.getElementById(btn.id).setAttribute('disabled', 'disabled');

            $.get("/Home/VoteForConcernAsync",
                { concernId: concernId },
                function(data) {
                    document.getElementById("likesConcern " + concernId).textContent =
                        (data.votes) + " Likes"; // display id value which is returned from the action method
                });
        }

    }
    document.getElementById("ItemPreview").src = "data:image/jpeg;base64," + @Model.Image.First().Img;



</script>
