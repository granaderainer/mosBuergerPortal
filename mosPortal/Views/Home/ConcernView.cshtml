@using Microsoft.AspNetCore.Authorization
@model Concern
@inject IAuthorizationService AuthorizationService
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{


    ViewData["Title"] = "ConcernView";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["ConcernId"] = Model.Id;
    var categories = ViewData["Categories"] as IEnumerable<Category>;
}

<div id="heading-breadcrumbs">
    <div class="container">
        <div class="row d-flex align-items-center flex-wrap">
            <div class="col-md-7">
                <h1 class="h2">Anliegen</h1>
            </div>
            <div class="col-md-5">
                <ul class="breadcrumb d-flex justify-content-end">
                    <li class="breadcrumb-item">
                        <a asp-action="Index" asp-controller="Home">Home</a>
                    </li>
                    <li class="breadcrumb-item">
                        <a asp-action="ShowConcerns" asp-controller="Home">Alle Anliegen</a>
                    </li>
                    <li class="breadcrumb-item active">@Model.Title</li>
                </ul>
            </div>
        </div>
    </div>
</div>
<!-- Page Content -->
<div class="container">
    <!-- Page Heading/Breadcrumbs -->
    @*<div class="row"> <!-- evtl bar raus-->
        <div class="col-lg-12 background-pentagon">
            <h1 class="page-header">
                Anliegen
            </h1>
            <ol class="breadcrumb">
                <li>
                    <ul class="breadcrumb d-flex justify-content-end">
                        <li class="breadcrumb-item">
                            <a href="index.html">Home</a>
                        </li>
                        <!--Richtigen Link einfügen-->
                        <li class="breadcrumb-item">
                            <a href="#">Alle Anliegen</a>
                        </li>
                        <li class="breadcrumb-item active">Anliegen</li>
                    </ul>
                </li>
            </ol>
        </div>
    </div>*@
    <!-- /.row -->
    <div class="row bar">

        <div class="col-md-3">
            <!-- PAGES MENU -->
            <div class="panel sidebar-menu">
                <!-- "Neues Anliegen" Button Sidebar-->
                @if (SignInManager.IsSignedIn(User))
                {
                    <span class="input-group-btn">
                        <a class="btn btn-primary" id="createNewConcern" data-toggle="modal" data-target="#createConcernModal"><i class="fa fa-plus-square"></i> Neues Anliegen</a>
                    </span>
                }
                <hr>
                <!-- Blog Search Well -->

                <div class="input-group">
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="button">
                            <i class="fa fa-search"></i>
                        </button>
                    </span>
                    <input type="text" class="form-control">

                </div>
                <!-- /.input-group -->

                <hr>
                <!-- Blog Categories Well -->
                <div class="panel panel-default sidebar-menu">
                    <div class="panel-heading">
                        <h3 class="h4 panel-title">Anliegen</h3>
                    </div>
                    <div class="panel-body">
                        <ul class="nav nav-pills flex-column text-sm">
                            <li class="nav-item">
                                <a asp-controller="Home" asp-action="Index" class="nav-link">Home</a>
                            </li>
                            <li class="nav-item">
                                <a asp-controller="Home" asp-action="ShowConcerns" class="nav-link">Alle Anliegen</a>
                            </li>

                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- Blog Entries Column -->
        <!-- Blog Post Content Column -->
        <div class="col-md-9">
            <!-- Blog Post -->
            <section class="post" id="post">
                <h2>@Model.Title</h2>
                <div class="row">
                    <div class="col-sm-5">
                        <p class="author-category">Von <a class="not-active" href="">User @Model.UserId</a> in <a class="not-active" href=""> @Model.Category.Description</a></p>
                    </div>
                    <div class="col-sm-7  text-right">
                        <div class=""></div>
                        @*<p class="date-comments"><a class="not-active" href=""><i class="fa fa-clock-o"></i> Erstellt am @Model.Date.ToString("dd/MM/yyyy")</a><a class="not-active" href=""><i class="fa fa-comment-o"></i> @Model.Comment.Count Kommentare</a></p>*@
                        <p class="date-comments small">
                            <i class="fa fa-clock-o"></i> Erstellt am @Model.Date.ToString("dd/MM/yyyy")
                            <span>
                            </span><i class="fa fa-comment-o"></i> @Model.Comment.Count Kommentare
                        </p>
                    </div>
                </div>

                <hr>
                <!-- Date/Time -->
                <!--<p class="read-more text-right"><i class="fa fa-clock-o"></i> Erstellt am @Model.Date.ToString("dd/MM/yyyy")</p>-->
                <p></p>
                <!-- Preview Image -->
                <!--<img class="img-responsive" src='' />-->

                <div class="project owl-carousel" id="carousel">
                    <!--Hier kommen per Javascript die Bilder rein-->
                    @foreach (var image in Model.Image)
                    {
                        <div class="item">
                            <img class="img-fluid" src="/File/GetImage?id=@image.Id"/>
                        </div>
                    }
                </div>

                <br/>
                <!-- Post Content -->
                <p>@Model.Text</p>
                <div class="progress mb-2">
                    <div role="progressbar" id="progressbar @Model.Id" style="width: @Model.UserConcern.Count()%;" aria-valuenow="@Model.UserConcern.Count()" aria-valuemin="0" aria-valuemax="100" class="progress-bar bg-primary"></div>
                </div>
                <div class="row">
                    <span class="col-6 text-left">
                        <span id="likesConcern @Model.Id" class="badge badge-primary text-white badge-pill">@Model.UserConcern.Count()</span>
                        @if (Model.UserConcern.Count() == 1)
                        {
                            <span class="badge"> Abstimmung</span>
                        }
                        else
                        {
                            <span class="badge"> Abstimmungen</span>
                        }


                    </span>
                    <div class="col-6 text-right">

                        @if (SignInManager.IsSignedIn(User) && Model.allowToVote(await SignInManager.UserManager.GetUserAsync(Context.User)))
                        {
                            <a class="btn btn-primary text-white" id="likeConcern @Model.Id" onclick="disableButton(this, @Model.Id)">Vote <i class="fa fa-thumbs-up"></i></a>
                        }
                        else
                        {
                            <a class="btn btn-primary disabled text-white" id="likeConcern @Model.Id" disabled>Vote <i class="fa fa-thumbs-up"></i></a>
                        }
                    </div>
                </div>
                <hr>
                <!-- Blog Comments -->
                <!-- Comments Form -->
                <div class="row">
                    <div class="col-6 text-left">

                        <h4 class="text-uppercase">Jetzt kommentieren</h4>
                    </div>
                    <div class="col-6 text-right">
                        <div>Anzahl Kommentare: <span class="badge badge-primary text-white">@Model.Comment.Count</span></div>
                    </div>
                </div>

                <div class="well">
                    <form role="form" method="post" asp-route-concernId="@Model.Id" asp-action="PostCommentAsync" asp-controller="Home">
                        <div class="form-group">
                            <textarea class="form-control" rows="3" name="commentText" id="commentText"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">Posten</button>
                    </form>
                </div>
                <hr>
                <!-- Posted Comments -->
                @foreach (var comment in Model.Comment)
                {
                    <!-- Comment -->
                    <div class="media">
                        <div class="media-body ">
                            <h4 class="media-heading">
                                Einwohner @comment.UserId
                                <small class="ml-3">@comment.Date.ToString("dd/MM/yyyy hh:mm")</small>
                            </h4>
                            <div class="ml-3 fa fa-line">@comment.Text</div>
                        </div>

                    </div>
                    <hr>
                }
            </section>
        </div>
    </div>


</div>

@await Html.PartialAsync("CreateConcernModalView", new Concern(), new ViewDataDictionary(ViewData))


<script type="text/javascript">
    function showCategory() {
        var selectElement = document.getElementById("selectCategory");
        var index = selectElement.selectedIndex;
        var categoryId = selectElement.options[index].value;
        var categoryDescription = selectElement.options[index].text;

        $("#categoryId").val(categoryId);
        $("#categoryDescription").val(categoryDescription);
        $("#categoryHeader").html('<h3  class="h4">Kategorie anzeigen</h3>');
        $("#editCategory").show();
        $("#cancelEditCategory").hide();
        $("#saveCategory").hide();
        $("#categoryDescription").attr('disabled', 'disabled');
        $("#deleteCategory").show();
        console.log(categoryId);
        console.log(categoryDescription);
        console.log(index);

    }


    function disableButton(btn, concernId) {
        if (!document.getElementById(btn.id).disabled) {
            document.getElementById(btn.id).disabled = true;
            document.getElementById(btn.id).setAttribute('disabled', 'disabled');

            $.get("/Home/VoteForConcernAsync",
                { concernId: concernId },
                function(data) {
                    document.getElementById("likesConcern " + concernId).textContent =
                        (data.votes); // display id value which is returned from the action method
                    var progressbar = document.getElementById("progressbar " + concernId);
                    $(progressbar).attr('aria-valuenow', data.votes).css('width', data.votes + '%');
                });
        }

    }


</script>