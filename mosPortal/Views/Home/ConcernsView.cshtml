@model IEnumerable<Concern>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "ConcernsView";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var categories = ViewData["Categories"] as IEnumerable<Category>;
}

<div id="heading-breadcrumbs">
    <div class="container">
        <div class="row d-flex align-items-center flex-wrap">
            <div class="col-md-7">
                @if (SignInManager.IsSignedIn(User))
                {
                    <span class="input-group-btn">
                        <a class="btn btn-primary" id="createNewConcern" data-toggle="modal" data-target="#createConcernModal"><i class="fa fa-plus-square"></i> Neues Anliegen</a>
                    </span>
                }
            </div>
            <div class="col-md-5">
                <ul class="breadcrumb d-flex justify-content-end">
                    <li class="breadcrumb-item">
                        <a asp-action="Index" asp-controller="Home">Home</a>
                    </li>
                    <li class="breadcrumb-item active">Alle Anliegen</li>
                </ul>
            </div>
        </div>
    </div>
</div>
<!-- Page Content -->
<div class="container">
    <!-- Page Heading/Breadcrumbs -->

    <!-- /.row -->
    <div class="row">
        <!-- Blog Sidebar Widgets Column NEW -->
        <div class="col-md-3 bar">
            <!-- PAGES MENU -->
            <div class="panel panel-default sidebar-menu">
                <!-- "Neues Anliegen" Button Sidebar-->

                <hr>
                <!-- Blog Search Well -->

                <h4>Nach Anliegen suchen:</h4>
                <div class="input-group">
                    <input type="text" class="form-control">
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="button">
                            <i class="fa fa-search"></i>
                        </button>
                    </span>
                </div>
                <!-- /.input-group -->

                <hr>
                <!-- Blog Categories Well -->
                <div class="panel-body">
                    <h4>Alle Kategorien</h4>
                    <ul class="nav nav-pills flex-column text-sm">
                        <li class="nav-item">
                            <a href="text.html" class="nav-link">Straßen</a>
                        </li>
                        <li class="nav-item">
                            <a href="contact.html" class="nav-link">Öffentliche Einrichtungen</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- Blog Entries Column -->
        <div class="col-md-9">
            @foreach (var item in Model)
            {
                <div id="content">
                    <div class="container">
                        <div class="row box Pollbox shadow">
                            <div id="blog-listing-medium">
                                <section class="post">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="image">
                                                <a class="" id="readMoreConcern @item.Id" asp-action="ShowConcern" asp-controller="Home" asp-route-concernId="@item.Id">
                                                    <img class="img-fluid" id="ItemPreview" src='@Url.Action("GetConcernTitleImage", "Image", new {concernId = item.Id})'/>
                                                </a>
                                            </div>
                                        </div>
                                        <div class="col-md-8">
                                            <h2 class="h3 mt-0">
                                                <a href="post.htmls" class="not-active">@item.Title</a>
                                            </h2>
                                            <div class="d-flex flex-wrap justify-content-between text-xs">
                                                <p class="author-category">Kategorie <a href="#" class="not-active">@item.Category.Description</a></p>
                                                <div class="not-active">
                                                    <p class="date-comments">
                                                        <a href="blog-post.html">
                                                            <i class="fa fa-calendar-o"></i> @item.Date.ToString("dd/MM/yyyy")</a><a href="blog-post.html"><i class="fa fa-comment-o"></i> <!-- Muss noch angepasst werden--> @item.Comment.Count() Kommentare</a>
                                                    </p>
                                                </div>
                                            </div>
                                            
                                            <br>
                                            <p class="read-more text-right">
                                                <a>
                                                    @if (item.UserConcern.Count() == 1)
                                                    {
                                                        <span id="likesConcern @item.Id" class="badge badge-primary text-white">@item.UserConcern.Count()</span>
                                                    }
                                                    else
                                                    {
                                                        <span id="likesConcern @item.Id" class="badge badge-primary text-white">@item.UserConcern.Count()</span>
                                                    }
                                                </a>
                                                @if (SignInManager.IsSignedIn(User) && item.allowToVote(await SignInManager.UserManager.GetUserAsync(Context.User)))
                                                {
                                                    <a class="btn btn-primary" href="#" id="likeConcern @item.Id" onclick="disableButton(this, @item.Id)">Like <i class="fa fa-thumbs-up"></i></a>
                                                }
                                                else
                                                {
                                                    <a class="btn btn-primary" href="#" id="likeConcern @item.Id" disabled>Like <i class="fa fa-thumbs-up"></i></a>
                                                }
                                                <a class="btn btn-primary" id="readMoreConcern @item.Id" asp-action="ShowConcern" asp-controller="Home" asp-route-concernId="@item.Id">Anzeigen <i class="fa fa-angle-right"></i></a>
                                            </p>
                                        </div>
                                    </div>
                                </section>
                            </div>
                        </div>
                    </div>
                </div>

               
            }

            <!-- Pager new -->
            <ul class="pager d-flex align-items-center justify-content-between list-unstyled">
                <li class="previous">
                    <a href="#" class="btn btn-template-outlined">← Older</a>
                </li>
                <li class="next disabled">
                    <a href="#" class="btn btn-template-outlined">Newer →</a>
                </li>
            </ul>

        </div>


     

    </div>

</div>
<!-- /.container -->
@await Html.PartialAsync("CreateConcernModalView", new Concern(), new ViewDataDictionary(ViewData))

<script type="text/javascript">
   function disableButton(btn, concernId) {
        if (!document.getElementById(btn.id).disabled) {
            document.getElementById(btn.id).disabled = true;
            document.getElementById(btn.id).setAttribute('disabled', 'disabled');

            $.get("/Home/VoteForConcernAsync",
                { concernId: concernId },
                function(data) {
                    document.getElementById("likesConcern " + concernId).textContent =
                        (data.votes) + " Likes"; // display id value which is returned from the action method
                });
        }

    }


</script>
