@using Microsoft.AspNetCore.Authorization
@model IEnumerable<Concern>
@inject IAuthorizationService AuthorizationService
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "ConcernsView";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var categories = ViewData["Categories"] as IEnumerable<Category>;
}

<div id="heading-breadcrumbs">
    <div class="container">
        <div class="row d-flex align-items-center flex-wrap">
            <div class="col-md-7">
                @if (SignInManager.IsSignedIn(User))
                {
                    <span class="input-group-btn">
                        <a class="btn btn-primary text-white" id="createNewConcern" data-toggle="modal" data-target="#createConcernModal"><i class="fa fa-plus-square"></i> Neues Anliegen</a>
                    </span>
                }
            </div>
            <div class="col-md-5">
                <ul class="breadcrumb d-flex justify-content-end">
                    <li class="breadcrumb-item">
                        <a asp-action="Index" asp-controller="Home">Home</a>
                    </li>
                    <li class="breadcrumb-item active">Alle Anliegen</li>
                </ul>
            </div>
        </div>
    </div>
</div>
<div class="container">
  
    <div class="row">
        <div class="col-md-3 bar">
            <div class="panel panel-default sidebar-menu">
                <!-- "Neues Anliegen" Button Sidebar-->

                <hr>

                <h4>Nach Anliegen suchen:</h4>
                <div class="input-group">
                    <input id="search" type="text" class="form-control">
                    <span class="input-group-btn">
                        <button class="btn btn-default" type="submit">
                            <i class="fa fa-search"></i>
                        </button>
                    </span>
                </div>
             
                <hr>
                <div class="panel-body">
                    <h4>Alle Kategorien</h4>
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <label class="input-group-text" for="inputGroupSelect01">Kategorien</label>
                        </div>
                        <select class="custom-select" id="selectCategory" onchange="selectCategory()">
                            <option value="0" selected>Alle</option>
                            @foreach (var varCategory in categories)
                            {
                                <option value="@varCategory.Id">@varCategory.Description</option>
                            }

                        </select>
                    </div>
                   
                </div>
            </div>
        </div>
        <div class="col-md-9">
            @foreach (var item in Model)
            {
                var percent = @item.UserConcern.Count * 10; //*10 nur für die Präsentation
                if (percent >100)
                {
                    percent = 100;
                }
                <div id="@item.Id @item.Category.Id" name="concern">
                    <div class="container">
                        <div class="row box Pollbox shadow">
                            <div id="blog-listing-medium">
                                <section class="post">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="image">
                                                <a class="" id="readMoreConcern @item.Id" asp-action="ShowConcern" asp-controller="Home" asp-route-concernId="@item.Id">
                                                    <img class="img-fluid" id="ItemPreview" src='@Url.Action("GetConcernTitleImage", "File", new {concernId = item.Id})'/>
                                                </a>
                                            </div>
                                        </div>
                                        <div class="col-md-8">
                                            <h2 class="h3 mt-0">
                                                <a href="#" class="not-active">@item.Title</a>
                                            </h2>
                                            <div class="d-flex flex-wrap justify-content-between text-xs">
                                                <p class="author-category">Kategorie <a href="#" class="not-active">@item.Category.Description</a></p>
                                                <div class="not-active">
                                                    <p class="date-comments">
                                                        <a href="blog-post.html">
                                                            <i class="fa fa-calendar-o"></i> @item.Date.ToString("dd/MM/yyyy")
                                                        </a>
                                                        <a href="blog-post.html">
                                                            <i class="fa fa-comment-o"></i>
                                                            @if (item.Comment.Count == 1)
                                                            {
                                                                <span> @item.Comment.Count Kommentar</span>
                                                            }
                                                            else
                                                            {
                                                                <span>@item.Comment.Count Kommentare</span>
                                                            }
                                                        </a>
                                                    </p>

                                                </div>
                                            </div>

                                            <br>
                                            <div class="progress">
                                                <div role="progressbar" id="progressbar @item.Id" style="width: @percent%;" aria-valuenow=@item.UserConcern.Count() aria-valuemin="0" aria-valuemax="10" class="progress-bar bg-primary"></div> @*aria-valuemax = "100"*@
                                            </div>
                                            <p class="text-right">

                                                <a>
                                                    @if (item.UserConcern.Count() == 1)
                                                    {
                                                        <span id="likesConcern @item.Id" class="badge badge-primary text-white">@item.UserConcern.Count()</span>
                                                    }
                                                    else
                                                    {
                                                        <span id="likesConcern @item.Id" class="badge badge-primary text-white">@item.UserConcern.Count()</span>
                                                    }
                                                </a>

                                                @if (SignInManager.IsSignedIn(User) && item.allowToVote(await SignInManager.UserManager.GetUserAsync(Context.User)))
                                                {
                                                    <a class="btn btn-primary text-white" id="likeConcern @item.Id" onclick="disableButton(this, @item.Id)">Vote <i class="fa fa-thumbs-up"></i></a>
                                                }
                                                else
                                                {
                                                    <a class="btn btn-primary disabled text-white" id="likeConcern @item.Id">Vote <i class="fa fa-thumbs-up"></i></a>
                                                }
                                                <a class="btn btn-primary" id="readMoreConcern @item.Id" asp-action="ShowConcern" asp-controller="Home" asp-route-concernId="@item.Id">Anzeigen <i class="fa fa-angle-right"></i></a>
                                            </p>
                                        </div>
                                    </div>
                                </section>
                            </div>
                        </div>
                    </div>
                </div>
            }

     
            <ul class="pager d-flex align-items-center justify-content-between list-unstyled">
              
            </ul>

        </div>


    </div>

</div>

@await Html.PartialAsync("CreateConcernModalView", new Concern(), new ViewDataDictionary(ViewData))

<script type="text/javascript">

    function getComments(itemid) {
        $.get("/Home/VoteForConcernAsync",
            { concernId: concernId },
            function(data) {
                console.log(data);
                document.getElementById("likesConcern " + concernId).textContent =
                    (data.votes); // display id value which is returned from the action method


            });
        $("#countcomments").write();
    }

    var concernElements = [];
    $(document).ready(function() {
        concernElements = document.getElementsByName("concern");
    });

    function selectCategory() {
        var selectedCategory = $('#selectCategory').val();
        console.log('selectedCategory' + selectedCategory);
        for (var i = 0; i < concernElements.length; i++) {
            var categoryid = concernElements[i].id.split(' ')[1];
            console.log('categoryid' + categoryid);
            console.log('concernElements' + concernElements[i]);
            if (categoryid == selectedCategory) {
                concernElements[i].style.display = "block";
            } else {
                concernElements[i].style.display = "none";
            }
            if (selectedCategory == 0) {
                concernElements[i].style.display = "block";
            }
        }
    }


    function showCategory() {
        var selectElement = document.getElementById("selectCategory");
        var index = selectElement.selectedIndex;
        var categoryId = selectElement.options[index].value;
        var categoryDescription = selectElement.options[index].text;

        $("#categoryId").val(categoryId);
        $("#categoryDescription").val(categoryDescription);
        $("#categoryHeader").html('<h3  class="h4">Kategorie anzeigen</h3>');
        $("#editCategory").show();
        $("#cancelEditCategory").hide();
        $("#saveCategory").hide();
        $("#categoryDescription").attr('disabled', 'disabled');
        $("#deleteCategory").show();
        console.log(categoryId);
        console.log(categoryDescription);
        console.log(index);

    }

    function disableButton(btn, concernId) {
        console.log($('#' + btn.id));
        if (btn.classList.contains('disabled') === false) {
            btn.classList.add('disabled');
            $.get("/Home/VoteForConcernAsync",
                { concernId: concernId },
                function(data) {
                    console.log(data);
                    document.getElementById("likesConcern " + concernId).textContent =
                        (data.votes); // display id value which is returned from the action method
                    var progressbar = document.getElementById("progressbar " + concernId);
                    $(progressbar).attr('aria-valuenow', data.votes).css('width', data.votes*10 + '%');
                    //* 10 bei Progressbar rausnehmen, da nur für die Präsentation gedacht.
                });
        }


    }

    $('#search').keyup(function() {

        //Das soll ausgeführt werden
    });


</script>