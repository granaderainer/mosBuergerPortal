@model IEnumerable<mosPortal.Models.Poll>

@{
    ViewData["Title"] = "Anliegen";
    Layout = "~/Views/Shared/_AdministrationLayout.cshtml";
}


<!-- Page Header-->
<header class="page-header">
    <div class="container-fluid">
        <h2 class="no-margin-bottom">Umfragen</h2>
    </div>
</header>
<!-- Breadcrumb-->
<div class="breadcrumb-holder container-fluid">
    <ul class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Administration">Home</a></li>
        <li class="breadcrumb-item active">Umfragen            </li>
    </ul>
</div>
<section class="forms">
    <div class="container-fluid">

        <div class="row">
            <!-- Inline Form-->
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-close">
                        <div class="dropdown">
                            <button type="button" id="closeCard3" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="dropdown-toggle"><i class="fa fa-ellipsis-v"></i></button>
                            <div aria-labelledby="closeCard3" class="dropdown-menu dropdown-menu-right has-shadow"><a href="#" class="dropdown-item remove"> <i class="fa fa-times"></i>Close</a><a href="#" class="dropdown-item edit"> <i class="fa fa-gear"></i>Edit</a></div>
                        </div>
                    </div>
                    <div class="card-header d-flex align-items-center">
                        <h3 class="h4">Filter</h3>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="col">
                                <div class="form-group">
                                    <label class="col-sm-12 form-control-label">Status</label>
                                    <select id="pollStatusSelect" class="col-lg-12" asp-items="ViewBag.StatusList" onchange="selectedFilterChanged()"></select>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-group">
                                    <label class="col-sm-12 form-control-label">Kategorie</label>
                                    <select id="pollCategorySelect" class="col-lg-12" asp-items="ViewBag.CategoriesList" onchange="selectedFilterChanged()"></select>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-group">
                                    <label class="col-sm-12 form-control-label">Suche</label>
                                    <input id="pollSearchText" class="col-lg-12" />

                                </div>
                            </div>
                            <div class="col">
                                <div class="row">
                                    <div class="col">
                                        <div class="form-group">
                                            <label class="col-sm-12 form-control-label"></label>
                                            <button id="pollSearchButton" type="button" class="btn btn-primary">Suche</button>
                                        </div>
                                    </div>
                                    <div class="col">
                                        @if (ViewBag.allowToCreatePoll)
                                        {
                                            <label class="col-sm-12 form-control-label"></label>
                                            <div class="form-group">
                                                <button type="button" data-toggle="modal" data-target="#createPollModal" class="btn btn-primary">Umfrage Erstellen </button>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<section class="charts">
    <div class="container-fluid">
        <div class="row">
            @foreach (Poll poll in Model)
            {
                @await Html.PartialAsync("PollAdministrationPartialView", poll)

            }
        </div>
    </div>
</section>
<!-- Modal -->
@await Html.PartialAsync("PollAdministrationView")
@*<div class="modal fade" id="showPollModal" tabindex="-1" role="dialog" aria-labelledby="showPollModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Umfrage anzeigen</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">&times;</button>
                </div>
                <div class="modal-body">
                    <div id="pollModalDiv" style="display:none;">
                        <div id="pollModalTitle"></div>
                        <hr>
                        <div id="pollModalText"></div>
                        <hr>
                        <div id="pollModalEnd"></div>
                        <hr>
                        <input type="hidden" name="pollModalId" id="pollModalId" />
                        <div id="pollModalVotes"></div>
                        <div id="pollChartModal" style="height: 400px;"></div>
                    </div>
                    <div id="pollModalLoad">
                        <div class="text-center">
                            <span class="fa fa-spinner fa-spin fa-3x"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
                    <button id="submitModal" type="submit" class="btn btn-primary" data-dismiss="modal" onclick="changepollStatus()">Speichern</button>

                </div>
            </div>
        </div>
    </div>
    <!-- Modal-->*@
<!-- Modal Form-->
@await Html.PartialAsync("CreatePollAdministrationView", new Poll { }, new ViewDataDictionary(ViewData))
<script type="text/javascript">
    var pollElems = [];
    var colors = ["#990066", "#66cc33", "#006699", "#ff6600", "#009999", "#cc3333", "#ffff00", "663399"];


    $(document).ready(function () {
        pollElems = document.getElementsByName("poll");
        $('li#linkPolls').addClass('active');

        var elems = document.getElementsByName("pollChart");
        for (var i = 0; i < elems.length; i++) {
            var id = elems[i].id;
            var pollId = (id.split(" "))[1];
            console.log("Poll Id =" + pollId)
            var noVotesId = "pollNoVotes " + pollId;
            createChart(id, pollId, noVotesId);
        }
    });

    function createChart(chartId, pollId, noVotesId) {
        $.ajax({
            async: false,
            type: 'GET',
            url: '/Administration/GetPollAnswers?pollId=' + pollId,
            success: function (data) {
                console.log(data);
                var count = data.length;
                var chartColors = [];
                var j = 0;
                for (var i = 0; i < count; i++) {
                    if (j == (colors.length - 1)) {
                        j = 0;
                    }
                    chartColors.push(colors[j]);
                    j++;
                }
                var answerCountNotNull = false;
                for (var i = 0; i < data.length; i++) {
                    if (data[i].value == 0) {
                        answerCountNotNull = false;
                    }
                    else {
                        answerCountNotNull = true;
                        break;
                    }
                }
                if (answerCountNotNull == true) {
                    Morris.Donut({
                        element: chartId,
                        data: data,
                        colors: chartColors
                    });
                    document.getElementById(chartId).style.display = "block";
                    document.getElementById(noVotesId).style.display = "none";
                }
                else {
                    document.getElementById(chartId).style.display = "none";
                    document.getElementById(noVotesId).style.display = "block";
                }
            }
        });
    }
    function selectedFilterChanged() {
        var statusSelect = document.getElementById("pollStatusSelect");
        var selectedStatus = statusSelect.value;
        var categorySelect = document.getElementById("pollCategorySelect");
        var selectedCategory = categorySelect.value;
        for (var i = 0; i < pollElems.length; i++) {
            var display = "block";

            var id = pollElems[i].id;
            var ids = id.split(" ");

            if (ids[1] != selectedStatus) {
                display = "none";
            }
            else {
                display = "block";
            }
            if (selectedStatus == 0) {
                display = "block";
            }
            if (display != "none") {
                if (ids[2] != selectedCategory) {
                    display = "none";
                }
                else {
                    display = "block";
                }
                if (selectedCategory == 0) {
                    display = "block";
                }
            }
            pollElems[i].style.display = display;
        }
    }

    function createPoll() {
        var answerElements = document.getElementsByName("answers");
        var answers = [];
        for (var i = 0; i < answerElements.length; i++) {
            answers.push(answerElements[i].value);
        }
        var sendData = {
            Title: $("#pollTitleModal").val(),
            Text: $("#pollTextModal").val(),
            End: $("#pollEndModal").val(),
            NeedsLocalCouncil: document.getElementById("pollNeedsLocalCouncilModal").checked,
            CategoryId: $("#pollSelectCategoryModal").val(),
            ConcernId: "0",
            Answers: answers
        };
        console.log(sendData);
        $.ajax({
            type: 'POST',
            url: '/Administration/CreatePollAsync',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(sendData),
            success: function (data) {
                console.log(data);
                if (data.result == 1) {
                    vNotify.success({ text: "Die Umfrage wurde erfolgreich erstellt!", title: "Umfrage erstellt" });
                }
                else {
                    vNotify.error({ text: "Die Umfrage konnte nicht erstellt werden!", title: "Erstellung fehlgeschlagen!" });
                }
            }
        });
    }
    ///Implement!!!
    $("#pollSearchButton").click(function () {
        var searchText = $("#pollSearchText").val();
        $("#pollSearchText").val("");
        console.log(searchText);
        if (searchText == null || searchText == "") {
            console.log("nein");
            vNotify.info({ Title: "Suchtext eingeben", Text: "Bitte geben sie einen Suchtext ein!" })
        }
        else {
            console.log("ja");
        }
    });

</script>