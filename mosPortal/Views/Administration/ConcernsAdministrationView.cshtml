@model IEnumerable<mosPortal.Models.Concern>
@{
    ViewData["Title"] = "ConcernsAdministrationView";
    Layout = "~/Views/Shared/_AdministrationLayout.cshtml";
}



<!-- Page Header-->
<header class="page-header">
    <div class="container-fluid">
        <h2 class="no-margin-bottom">Anliegen</h2>
    </div>
</header>
<div class="breadcrumb-holder container-fluid">
    <ul class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Administration">Home</a></li>
        <li class="breadcrumb-item active">Anliegen            </li>
    </ul>
</div>

<section class="forms">
    <div class="container-fluid">

        <div class="row">
            <!-- Inline Form-->
            <div class="col-lg-10">
                <div class="card">
                    <div class="card-close">
                        <div class="dropdown">
                            <button type="button" id="closeCard3" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="dropdown-toggle"><i class="fa fa-ellipsis-v"></i></button>
                            <div aria-labelledby="closeCard3" class="dropdown-menu dropdown-menu-right has-shadow"><a href="#" class="dropdown-item remove"> <i class="fa fa-times"></i>Close</a><a href="#" class="dropdown-item edit"> <i class="fa fa-gear"></i>Edit</a></div>
                        </div>
                    </div>
                    <div class="card-header d-flex align-items-center">
                        <h3 class="h4">Filter</h3>
                    </div>
                    <div class="card-body">
                        <form class="form-inline">
                            <div class="form-group">
                                <label class="col-sm-3 form-control-label">Status</label>
                                <div class="col-sm-9">
                                    <select class="form-control mb-auto" name="concernStatusSelect" id="concernStatusSelect" asp-items="ViewBag.statusList" onchange="selectedStatusChanged()"></select>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Projects Section-->
<section class="projects no-padding-top">
    <div class="container-fluid">
        @foreach (Concern concern in Model)
        {
            <!-- Project-->
            <div class="project" name="concern" id="@concern.Id @concern.StatusId">
                <div class="row bg-white has-shadow">
                    <div class="left-col col-lg-6 d-flex align-items-center justify-content-between">
                        <div class="project-title d-flex align-items-center">
                            <!--<div class="image has-shadow"><img src="img/project-1.jpg" alt="..." class="img-fluid"></div>-->

                            <div class="image has-shadow"><img src="@Url.Action("GetImage", "Image", new { concernId = concern.Id.ToString()})" alt="..." class="img-fluid"></div>
                            <div class="text">
                                <h3 class="h4">@Html.DisplayFor(modelItem => concern.Title)</h3><small> @Html.DisplayFor(modelItem => concern.Text)</small>
                            </div>
                        </div>
                    </div>
                    <div class="right-col col-lg-4 d-flex align-items-center">
                        <div class="time"><i class="fa fa-clock-o"></i>@concern.Date.ToString("dd.MM.yy")</div>
                        <div class="comments"><i class="fa fa-comment-o"></i>@Html.DisplayFor(modelItem => concern.Comment.Count)</div>
                        <div class="comments"><i class="fa fa-thumbs-o-up"></i>@Html.DisplayFor(modelItem => concern.UserConcern.Count)</div>
                        <div class="project-progress">
                            <div class="progress">
                                <div role="progressbar" style="width: @concern.UserConcern.Count%; height: 6px;" aria-valuenow="@concern.UserConcern.Count" aria-valuemin="0" aria-valuemax="100" class="progress-bar bg-red"></div>
                            </div>
                        </div>
                    </div>
                    <div class="right-col col-lg-2 d-flex align-items-center">
                        @if (concern.UserConcern.Count >= 1 && concern.StatusId == 2)
                        {
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#changeConcernStatusModal" data-concernid="@concern.Id" data-concernstatusold="@concern.StatusId">Bearbeiten</button>
                            <button id="createPollButton" type="button" class="btn btn-primary" data-toggle="modal" data-target="#createPollModal" data-concernid="@concern.Id">Umfrage</button>
                        }
                        @if (concern.StatusId != 2)
                        {
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#changeConcernStatusModal" data-concernid="@concern.Id" data-concernstatusold="@concern.StatusId">Bearbeiten</button>
                        }
                        @if (concern.StatusId == 3 || concern.StatusId == 4)
                        {
                            <button id="createPollButton"type="button" class="btn btn-primary" data-toggle="modal" data-target="#createPollModal" data-concernid="@concern.Id">Umfrage</button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</section>
<!-- Modal -->
<div class="modal fade" id="changeConcernStatusModal" tabindex="-1" role="dialog" aria-labelledby="changeConcernStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Anliegen bearbeiten</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">&times;</button>
            </div>

            <div class="modal-body">
                <div id="concernModalTitle"></div>
                <div id="concernModalText"></div>
                <hr>
                <div id="concernModalDate"></div>
                <hr>
                <input type="hidden" name="concernModalId" id="concernModalId" />
                <input type="hidden" name="concernModelStatusOld" id="concernModelStatusOld" />
                <div class="form-group">
                    <label class="control-label">Status</label>
                    <select name="concernModalStatus" class="form-control" id="concernModalStatus"></select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Abbrechen</button>
                <button id="submitModal" type="submit" class="btn btn-primary" data-dismiss="modal" onclick="changeConcernStatus()">Speichern</button>

            </div>
        </div>
    </div>
</div>
<!-- Modal-->
@await Html.PartialAsync("CreatePollAdministrationView", new Poll { }, new ViewDataDictionary(ViewData))
<script type="text/javascript">
    var elems;
    $('#changeConcernStatusModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var concernId = button.data('concernid')
        var concernStatusOld = button.data('concernstatusold')// Extract info from data-* attributes
        getConcern(concernId, concernStatusOld);
    });
    $('#createPollModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var concernId = button.data('concernid') // Extract info from data-* attributes
        getConcernToCreatePoll(concernId);
    });
    function getConcernToCreatePoll(concernId)
    {
        $.get("/Administration/GetConcernJson", { concernId: concernId }, function (data) {
            console.log(data);
            var title = data.title;
            var text = data.text;
            var concernId = data.concernId;
            $("#pollTextModal").val(text);
            $("#pollTitleModal").val(title);
            $("#pollConcernIdModal").val(concernId);
            document.getElementById("pollSelectCategoryModal").selectedIndex = data.categoryId -1;
            if (data.comment == null) {
                $("#pollCommentModal").val("Kein Kommentar vom Gemeinderat")
            }
            else {
                $("#pollCommentModal").val(data.comment);
            }
        });
    }
    function createPoll() {
        var answerElements = document.getElementsByName("answers");
        console.log(answerElements);
        var answers = [];
        for (var i = 0; i < answerElements.length; i++) {
            answers.push(answerElements[i].value);
        }
        var sendData = {
            Title: $("#pollTitleModal").val(),
            Text: $("#pollTextModal").val(),
            End: $("#pollEndModal").val(),
            NeedsLocalCouncil: document.getElementById("pollNeedsLocalCouncilModal").checked,
            CategoryId: $("#pollSelectCategoryModal").val(),
            ConcernId: $("#pollConcernIdModal").val(),
            Answers: answers
        };
        
        console.log(sendData);
        $.ajax({
            type: 'POST',
            url: '/Administration/CreatePollAsync',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(sendData),
            success: function (result) {
                console.log('Data received: ');
                console.log(result);
                var divConcernId = (result.concernId) + " " + (result.concernStatusId);
                var concern = document.getElementById(divConcernId);
                var newConcernId = (result.concernId) + " 5";
                concern.setAttribute("id", newConcernId);
                if (document.getElementById("concernStatusSelect").value != 0) {
                    concern.style.display = "none";
                    $("#createPollButton").hide();
                }
            }
        });
        /*$.post("/Administration/CreatePollAsync", JSON.stringify(sendData), function (data) {
            if (data.result == 1) {
                vNotify.success({ text: "Die Umfrage wurde erfolgreich erstellt!", title: "Umfrage erstellt" });
            }
            else {
                vNotify.errer({ text: "Die Umfrage konnte nicht erstellt werden!", title: "Erstellung fehlgeschlagen!" });
            }
        });*/
    }
    function getConcern(concernId, concernStatusOld) {
        $.get("/Administration/GetConcernJson", { concernId: concernId }, function (data) {
            $("#concernModalId").val(concernId);
            $('#concernModelStatusOld').val(concernStatusOld);
            document.getElementById("concernModalTitle").innerHTML = "<h4>" + (data.title) + "</h4>";
            document.getElementById("concernModalText").innerHTML = (data.text);
            document.getElementById("concernModalDate").innerHTML = "Erstellt am: " + (data.date);// display id value which is returned from the action method
            var selectStatus = document.getElementById("concernModalStatus");
            var statuses = data.statuses;
            var fragment = document.createDocumentFragment();
            statuses.forEach(function (status, index) {
                var opt = document.createElement('option');
                opt.innerHTML = status.description;
                opt.value = status.id;
                fragment.appendChild(opt);
            });
            $("#concernModalStatus").empty();
            $("#concernModalStatus").append(fragment);
            $("#concernModalStatus").val(data.statusId);
        });
    }
    $(document).ready(function () {
        $("li#linkConcerns").addClass("active");
        elems = document.getElementsByName("concern");
        console.log(elems);

    });
    function selectedStatusChanged() {
        var select = document.getElementById("concernStatusSelect");
        var selectedStatus = select.value;
        for (var i = 0; i < elems.length; i++) {
            var id = elems[i].id;
            var ids = id.split(" ");
            if (ids[1] != selectedStatus) {
                elems[i].style.display = "none";
            }
            else {
                elems[i].style.display = "block";
            }
            if (selectedStatus == 0) {
                elems[i].style.display = "block";
            }
        }
    }
    function changeConcernStatus() {
        var selectElement = document.getElementById("concernModalStatus");
        var concernElement = document.getElementById("concernModalId");
        var oldStatusElement = document.getElementById("concernModelStatusOld");
        var oldStatusId = oldStatusElement.value;
        var statusId = selectElement.value;
        var concernId = concernElement.value;
        var result;
        $.post("/Administration/ChangeConcernStatus", { concern: concernId, status: statusId }, function (data) {
            result = (data.result);
            if (result == 1) {
                vNotify.success({ text: 'Der Status wurde erfolgreich geändert!', title: 'Status geändert' });
                var divConcernId = concernId + " " + oldStatusId;
                var concern = document.getElementById(divConcernId);
                var newConcernId = concernId + " " + statusId;
                concern.setAttribute("id", newConcernId);
                if (document.getElementById("concernStatusSelect").value != 0) {
                    concern.style.display = "none";
                }
            }
            else {
                vNotify.error({ text: 'Der Status konnte nicht geändert werden!', title: 'Statusänderung fehlgeschlagen' })
            }
        });
    }
</script>